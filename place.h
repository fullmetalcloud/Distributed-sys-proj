/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _PLACE_H_RPCGEN
#define _PLACE_H_RPCGEN

#include <rpc/rpc.h>

#ifdef __cplusplus
extern "C" {
#endif

using namespace std;

#define MAXLEN 255

typedef char *nametype;

typedef struct place *placelist;

struct place {
	nametype city;
	nametype state;
	nametype code;
	int distance;
	placelist next;
};
typedef struct place place;

struct placename {
	nametype city;
	nametype state;
};
typedef struct placename placename;

struct answer {
	placelist list;
	nametype city;
	nametype state;
	float latitude;
	float longitude;
	int status;
};
typedef struct answer answer;

struct findplace_ret {
	int placeerr;
	union {
		answer ans;
	} findplace_ret_u;
};
typedef struct findplace_ret findplace_ret;

#define PLACES_DIRPROG 0x34758651
#define PLACES_DIR_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define FINDPLACE 1
extern  findplace_ret * findplace_1(placename *, CLIENT *);
extern  findplace_ret * findplace_1_svc(placename *, struct svc_req *);
extern int places_dirprog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define FINDPLACE 1
extern  findplace_ret * findplace_1();
extern  findplace_ret * findplace_1_svc();
extern int places_dirprog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_nametype (XDR *, nametype*);
extern  bool_t xdr_placelist (XDR *, placelist*);
extern  bool_t xdr_place (XDR *, place*);
extern  bool_t xdr_placename (XDR *, placename*);
extern  bool_t xdr_answer (XDR *, answer*);
extern  bool_t xdr_findplace_ret (XDR *, findplace_ret*);

#else /* K&R C */
extern bool_t xdr_nametype ();
extern bool_t xdr_placelist ();
extern bool_t xdr_place ();
extern bool_t xdr_placename ();
extern bool_t xdr_answer ();
extern bool_t xdr_findplace_ret ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_PLACE_H_RPCGEN */
