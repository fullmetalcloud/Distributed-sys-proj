/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _AIRPORT_H_RPCGEN
#define _AIRPORT_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define MAXLENGTH 255

typedef char *namelen;

typedef struct airport *airportlist;

struct airport {
	namelen city;
	namelen state;
	namelen code;
	int distance;
	airportlist next;
};
typedef struct airport airport;

struct airportlocation {
	int latitude;
	int longitude;
};
typedef struct airportlocation airportlocation;

struct findairport_ret {
	int airporterr;
	union {
		airportlist list;
	} findairport_ret_u;
};
typedef struct findairport_ret findairport_ret;

#define AIRPORT_DIRPROG 0x34758657
#define AIRPORT_DIR_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define FINDAIRPORT 1
extern  findairport_ret * findairport_1(airportlocation *, CLIENT *);
extern  findairport_ret * findairport_1_svc(airportlocation *, struct svc_req *);
extern int airport_dirprog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define FINDAIRPORT 1
extern  findairport_ret * findairport_1();
extern  findairport_ret * findairport_1_svc();
extern int airport_dirprog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_namelen (XDR *, namelen*);
extern  bool_t xdr_airportlist (XDR *, airportlist*);
extern  bool_t xdr_airport (XDR *, airport*);
extern  bool_t xdr_airportlocation (XDR *, airportlocation*);
extern  bool_t xdr_findairport_ret (XDR *, findairport_ret*);

#else /* K&R C */
extern bool_t xdr_namelen ();
extern bool_t xdr_airportlist ();
extern bool_t xdr_airport ();
extern bool_t xdr_airportlocation ();
extern bool_t xdr_findairport_ret ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_AIRPORT_H_RPCGEN */
